//@version=5
//@author LazyBear (Modified - Single Signal Per Swing)
indicator("Squeeze Momentum Indicator [LazyBear] - Fixed", shorttitle="SQZMOM_LB_Fixed", overlay=false)

// ═══════════════════════════════════════════════════════════════════
// INPUT PARAMETERS
// ═══════════════════════════════════════════════════════════════════
bb_length = input.int(20, title="Bollinger Bands Length")
bb_mult = input.float(2.0, title="Bollinger Bands Multiplier")
kc_length = input.int(20, title="Keltner Channels Length")
kc_mult = input.float(1.5, title="Keltner Channels Multiplier")
use_true_range = input.bool(true, title="Use True Range for Keltner Channels")

// Source
src = close

// ═══════════════════════════════════════════════════════════════════
// BOLLINGER BANDS CALCULATION
// ═══════════════════════════════════════════════════════════════════
bb_basis = ta.sma(src, bb_length)
bb_dev = bb_mult * ta.stdev(src, bb_length)
bb_upper = bb_basis + bb_dev
bb_lower = bb_basis - bb_dev

// ═══════════════════════════════════════════════════════════════════
// KELTNER CHANNELS CALCULATION
// ═══════════════════════════════════════════════════════════════════
kc_ma = ta.sma(src, kc_length)
range_val = use_true_range ? ta.tr : (high - low)
kc_range_ma = ta.sma(range_val, kc_length)
kc_upper = kc_ma + kc_range_ma * kc_mult
kc_lower = kc_ma - kc_range_ma * kc_mult

// ═══════════════════════════════════════════════════════════════════
// SQUEEZE CONDITIONS
// ═══════════════════════════════════════════════════════════════════
squeeze_on = (bb_lower > kc_lower) and (bb_upper < kc_upper)
squeeze_off = (bb_lower < kc_lower) and (bb_upper > kc_upper)
no_squeeze = not squeeze_on and not squeeze_off

// ═══════════════════════════════════════════════════════════════════
// MOMENTUM CALCULATION
// ═══════════════════════════════════════════════════════════════════
mid_range = math.avg(ta.highest(high, kc_length), ta.lowest(low, kc_length))
price_diff = src - math.avg(mid_range, ta.sma(src, kc_length))
momentum = ta.linreg(price_diff, kc_length, 0)

// ═══════════════════════════════════════════════════════════════════
// COLOR LOGIC WITH PROPER STATE MANAGEMENT
// ═══════════════════════════════════════════════════════════════════

// Basic momentum color
momentum_color = momentum > 0 ? 
     (momentum > nz(momentum[1]) ? color.lime : color.green) : 
     (momentum < nz(momentum[1]) ? color.red : color.maroon)

// State variables for tracking swing direction and signal locks
var bool in_bullish_swing = false
var bool in_bearish_swing = false
var bool buy_signal_fired = false
var bool sell_signal_fired = false

// Determine current swing based on momentum
current_bullish = momentum > 0
current_bearish = momentum <= 0

// Detect swing changes
swing_to_bullish = current_bullish and not in_bullish_swing
swing_to_bearish = current_bearish and not in_bearish_swing

// Update swing states
if swing_to_bullish
    in_bullish_swing := true
    in_bearish_swing := false
    sell_signal_fired := false  // Reset sell signal lock when entering bullish swing

if swing_to_bearish
    in_bearish_swing := true
    in_bullish_swing := false
    buy_signal_fired := false   // Reset buy signal lock when entering bearish swing

// Signal detection
is_sell_signal = in_bullish_swing and not sell_signal_fired and momentum_color == color.green and momentum_color[1] == color.lime

is_buy_signal = in_bearish_swing and not buy_signal_fired and momentum_color == color.maroon and momentum_color[1] == color.red

// Update signal fired states
if is_sell_signal
    sell_signal_fired := true

if is_buy_signal
    buy_signal_fired := true

// Final color determination
final_color = momentum_color
if is_sell_signal
    final_color := color.blue
else if is_buy_signal
    final_color := color.gray

// Zero line color
zero_line_color = no_squeeze ? color.blue : squeeze_on ? color.black : color.gray

// ═══════════════════════════════════════════════════════════════════
// PLOTS
// ═══════════════════════════════════════════════════════════════════
plot(momentum, color=final_color, style=plot.style_histogram, linewidth=4, title="Momentum")
// plot(0, color=zero_line_color, style=plot.style_cross, linewidth=2, title="Zero Line / Squeeze Status")

// ═══════════════════════════════════════════════════════════════════
// DEBUG INFORMATION (Optional - Remove in production)
// ═══════════════════════════════════════════════════════════════════
// bgcolor(is_buy_signal ? color.new(color.gray, 90) : na, title="Buy Signal Background")
// bgcolor(is_sell_signal ? color.new(color.blue, 90) : na, title="Sell Signal Background")
